
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  username  String    @unique
  verifyCode String
  verifyCodeExpiry DateTime 
  isVerified Boolean @default(false)   
  workspaces Workspace[]
  projects  Project[] 
  projectsMemberships Project[] @relation("ProjectTeamMembers")
  collaborations Collaboration[] @relation("UserCollaborations")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Workspace {
  id          Int       @id @default(autoincrement())
  name       String
  description String?
  userId      Int
  user        User      @relation(fields: [userId], references: [id])
  projects    Project[] @relation("WorkspaceProjects")
  // college CollegeSpace?
  isPublic   Boolean @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}
model Project {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  userId      Int
  owner        User      @relation(fields: [userId], references: [id])
  teamMembers User[]    @relation("ProjectTeamMembers")
  openBoard      Task[]
  workspaces Workspace[] @relation("WorkspaceProjects")
  collaborations Collaboration[] @relation("ProjectCollaborations")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// model OpenBoard{
//   id Int @id @default(autoincrement()) 
//   projectId Int 
//   project   Project @relation(fields: [projectId], references: [id])
//   tasks Task[]
// }

model Task {
  id          Int      @id @default(autoincrement())
  task String
  userId      Int
  // openBoard   OpenBoard @relation(fields: [openBoardId], references: [id])
  projectId Int
  project     Project @relation(fields: [projectId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Collaboration {
  id                    Int             @id @default(autoincrement())
  projectId             Int
  project               Project         @relation("ProjectCollaborations", fields: [projectId], references: [id])
  userId                Int
  user                  User            @relation("UserCollaborations", fields: [userId], references: [id])
  status                CollaborationStatus
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
}

enum CollaborationStatus {
  PENDING
  ACCEPTED
  DECLINED
}


